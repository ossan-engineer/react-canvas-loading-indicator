{"version":3,"sources":["Loading.js","index.js"],"names":["Loading","size","color","canvasRef","useRef","useEffect","canvas","current","width","height","angle","undefined","getContext","ctx","update","fillStyle","fillRect","outerRadius","innerRadius","save","translate","strokeStyle","lineWidth","beginPath","moveTo","Math","cos","PI","sin","lineTo","stroke","restore","draw","setTimeout","ref","style","display","ReactDOM","render","document","getElementById"],"mappings":"8NAgEeA,EA9DC,SAAC,GAAuC,IAAD,IAApCC,YAAoC,MAA7B,IAA6B,MAAxBC,aAAwB,MAAhB,UAAgB,EAC/CC,EAAYC,iBAAO,MAmDzB,OAjDAC,oBAAU,WACR,IAAMC,EAASH,EAAUI,QACnBC,EAAQP,EACRQ,EAASR,EACXS,EAAQ,EAEZ,QAAiCC,WAAtBL,EAAOM,WAAlB,CAIA,IAAMC,EAAMP,EAAOM,WAAW,OA0Bf,SAATE,IACJD,EAAIE,UAAY,2BAChBF,EAAIG,SAAS,EAAG,EAAGR,EAAOC,GA1Bf,WACX,IAAMQ,EAAchB,EAAO,EACrBiB,EAAcjB,EAAO,EAE3BY,EAAIM,OACJN,EAAIO,UAAUZ,EAAQ,EAAGC,EAAS,GAElCI,EAAIQ,YAAcnB,EAClBW,EAAIS,UAAYrB,EAAO,GAEvBY,EAAIU,YACJV,EAAIW,OACFN,EAAcO,KAAKC,IAAKD,KAAKE,GAAK,IAAOjB,GACzCQ,EAAcO,KAAKG,IAAKH,KAAKE,GAAK,IAAOjB,IAE3CG,EAAIgB,OACFZ,EAAcQ,KAAKC,IAAKD,KAAKE,GAAK,IAAOjB,GACzCO,EAAcQ,KAAKG,IAAKH,KAAKE,GAAK,IAAOjB,IAE3CG,EAAIiB,SAEJjB,EAAIkB,UAMJC,GACAtB,GAAS,GACTuB,WAAW,WACTnB,KACC,IAGLA,KACC,CAACZ,EAAOD,IAGT,4BACEiC,IAAK/B,EACLK,MAAOP,EACPQ,OAAQR,EACRkC,MAAO,CAAEC,QAAS,Y,OCvDxBC,EAASC,OACP,6BACE,kBAAC,EAAD,CAASrC,KAAM,MACf,kBAAC,EAAD,CAASA,KAAM,IAAKC,MAAM,YAC1B,kBAAC,EAAD,CAASD,KAAM,IAAKC,MAAM,gBAE5BqC,SAASC,eAAe,W","file":"static/js/main.34b1c90c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nconst Loading = ({ size = 300, color = \"#bebebe\" }) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const width = size;\n    const height = size;\n    let angle = 0;\n\n    if (typeof canvas.getContext === undefined) {\n      return;\n    }\n\n    const ctx = canvas.getContext(\"2d\");\n\n    const draw = () => {\n      const outerRadius = size / 5;\n      const innerRadius = size / 6;\n\n      ctx.save();\n      ctx.translate(width / 2, height / 2);\n\n      ctx.strokeStyle = color;\n      ctx.lineWidth = size / 50;\n\n      ctx.beginPath();\n      ctx.moveTo(\n        innerRadius * Math.cos((Math.PI / 180) * angle),\n        innerRadius * Math.sin((Math.PI / 180) * angle)\n      );\n      ctx.lineTo(\n        outerRadius * Math.cos((Math.PI / 180) * angle),\n        outerRadius * Math.sin((Math.PI / 180) * angle)\n      );\n      ctx.stroke();\n\n      ctx.restore();\n    };\n\n    const update = () => {\n      ctx.fillStyle = \"rgba(255, 255, 255, 0.3)\";\n      ctx.fillRect(0, 0, width, height);\n      draw();\n      angle += 12;\n      setTimeout(() => {\n        update();\n      }, 60);\n    };\n\n    update();\n  }, [color, size]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={size}\n      height={size}\n      style={{ display: \"block\" }}\n    />\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loading from \"./Loading\";\n\nReactDOM.render(\n  <div>\n    <Loading size={100} />\n    <Loading size={200} color=\"skyblue\" />\n    <Loading size={300} color=\"lightgreen\" />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}